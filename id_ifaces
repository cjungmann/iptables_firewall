#!/usr/bin/env bash

declare -a IFACES

get_sed_info_regex()
{
    local IFS=$'\n'
    declare -a sed_ip_line=(
        '^'
        '[[:digit:]]+: '   # interface index plus colon
        '([[:alnum:]]+)'   # interface name,            group 1
        '[[:space:]]+'     # gap
        'inet '            # IP address intro
        '([.[:digit:]]+)'  # IP address                 group 2
        '(\/[[:digit:]]+)?' # discard '/24'              group 3
        '( brd '           # optional broadcast info,   group 4
        '([[:digit:].]+)'  # broadcast address          group 5
        ' )?'              # closure of group 4
        '.*$'              # remainder of line
    )
    IFS=$''
    echo "${sed_ip_line[*]}"
}

ip_address_is_private()
{
    local IFS=$'.'
    local -a ips=( $1 )
    local -i p1 p2
    if [ "${#ips[@]}" -eq 4 ]; then
        p1="${ips[0]}"
        p2="${ips[1]}"

        if [ "$p1" = 192 ] && [ "$p2" = 168 ]; then
            return 0
        elif [ "$p1" = 172 ] && [ "$p2" -ge 16 ] && [ "$p2" -le 31 ]; then
            return 0
        elif [ "$p1" = 10 ]; then
            return 0
        fi
    else
        echo "Unreadable ip address: \"${1}\"."
    fi

    return 1
}

ip_address_is_loopback()
{
    local IFS=$'.'
    local -a ips=( $1 )
    local -i p1
    if [ "${#ips[@]}" -eq 4 ]; then
        p1="${ips[0]}"

        if [ "$p1" -eq 127 ]; then
            return 0
        fi
    else
        echo "Unreadable ip address: \"${1}\"."
    fi

    return 1
}

collect_ifaces()
{
    local sed_script="s/$( get_sed_info_regex )/\1 \2 \5/p"

    local IFS=$'\n'
    local -n ifaces="IFACES"

    ifaces=( $( ip -o addr | sed -E -n "$sed_script" ) )
}

survey_ifaces()
{
    local iface
    local -a iparts
    local name addr brd
    for iface in "${IFACES[@]}"; do
        local IFS=$' '
        iparts=( $iface )
        name="${iparts[0]}"
        addr="${iparts[1]}"
        brd="${iparts[2]}"

        if ip_address_is_private "$addr"; then
            echo -n "LAN      "
        elif ip_address_is_loopback "$addr"; then
            echo -n "LOOPBACK "
        else
            echo -n "WAN      "
        fi

        echo -n "$addr ($name)"

        if [ "$brd" ]; then
            echo -n " (broadcast $brd)"
        fi

        echo
    done
}
    

# Interpret ifconfig output to determine the inbound and outbound interfaces
main()
{
    collect_ifaces
    survey_ifaces
}


main
