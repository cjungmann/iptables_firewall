#!/usr/bin/env bash

declare ROW_DELIM=$'\n'
declare FIELD_DELIM=$'|'

source bash_clargs
source nif_info

declare SUBNET_ADDRESS=192.168.1.0
declare BROADCAST_OCTET=1
declare NETMASK=255.255.255.0
declare UPDATE_STYLE=none
declare DEFAULT_LEASE_TIME=600
declare MAX_LEASE_TIME=7200
declare RESERVED=32
declare WAN_IF=$( nif_find_external_name )
declare LAN_IF=$( nif_find_first_internal_name )

# This DHCP server also serves as the NAT server, so the
# IP address of LAN_IFACE will be the 'router' value.
declare LAN_IFACE

declare OIFS="$IFS"
IFS=$'\n'

declare -a CLOPTS=(
    "a|SUBNET_ADDRESS|Set subnet address"
    "b|BROADCAST_OCTET|Value to use for the final octet of the broadcast address"
    "d|DEFAULT_LEASE_TIME|Default Lease Time"
    "e|WAN_IF|WAN (External) Interface"
    "h|->bash_clargs_usage|Show options and meanings"
    "i|LAN_IF|LAN (Internal) Interface"
    "m|MAX_LEASE_TIME|Max Lease Time"
    "n|NETMASK|Subnet netmask"
    "r|RESERVED|Highest reserved least-significant IP address"
    "u|UPDATE_STYLE|Update style"
)

IFS="$OIFS"

is_root() { [ "$USER" = "root" ]; }


show_dn_servers()
{
    echo "There are ${#DNSERVERS[@]} dns entries." >&2
    echo "They are:" >&2

    local server
    for server in "${DNSERVERS[@]}"; do
        echo "$server" >&2
    done
}

make_dns_option_line()
{
    echo -n "option domain-name-servers "

    local ns
    local -i add_comma=0
    for ns in "${DNSERVERS[@]}"; do
        if [ "$add_comma" -eq 0 ]; then
            add_comma=1
        else
            echo -n ", "
        fi
        echo -n "$ns"
    done
    echo ";"
}

make_broadcast_address()
{
    local IFS=$'.'
    local -a iparts=( $SUBNET_ADDRESS )
    iparts[3]="$BROADCAST_OCTET"
    echo "${iparts[*]}"
}

create_basic_subnet()
{
    local IFS=$'.'
    local -a iparts=( $SUBNET_ADDRESS )
    local -a nmparts=( $NETMASK )
    local -a router=$( make_broadcast_address )

    if [ "$RESERVED" -gt 0 ]; then
        local -a res_start=( "${iparts[@]:0:3}" "1" )
        local -a res_end=( "${iparts[@]:0:3}" "$RESERVED" )
                             
        echo "# Reserved subnet for fixed ip addresses"
        echo "subnet $SUBNET_ADDRESS netmask $NETMASK"
        echo "{"
        echo "   range ${res_start[*]} ${res_end[*]};"
        echo "   option routers $router;"
        echo "}"
    fi
}


write_dhcpd()
{
    make_dns_option_line

    echo "ddns-update-style ${UPDATE_STYLE};"
    echo "default-lease-time $DEFAULT_LEASE_TIME;"
    echo "max-lease-time $MAX_LEASE_TIME;"
    echo
    echo "authoritative;"
    echo

    create_basic_subnet


    
}

bash_clargs_process "$@"

write_dhcpd

